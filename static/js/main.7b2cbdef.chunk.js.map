{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","split","join","navigator","clipboard","writeText","filter","element","prototype","PropTypes","string","About","defaultProps","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7b2cbdef.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">            \r\n            {props.title}\r\n          </Link> */}\r\n          <a className=\"navbar-brand\" href=\"#\">            \r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link>   github pe upload kr rhe h toh routing remove kr di */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\"> \r\n                  Home\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">\r\n                {props.About}\r\n                </Link>\r\n              </li> */}\r\n              \r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n</div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\nNavbar.prototype={\r\n    title:PropTypes.string,\r\n    About: PropTypes.string, \r\n    \r\n}\r\nNavbar.defaultProps = {\r\n  title: 'default title',\r\n  About: 'About'\r\n};\r\n","// import React from \"react\";\r\nimport React, { useState } from 'react';\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=> {\r\n        // console.log(\"Uppercase was clicked\"+ text);\r\n        let newText=text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Convertd to UpperCase\",\"success\");\r\n    }\r\n\r\n    const handleDownClick = ()=> {\r\n        // console.log(\"Uppercase was clicked\"+ text);\r\n        let newText=text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Convertd to LowerCase\",\"success\");\r\n\r\n    }\r\n    const handleClearClick=()=>{\r\n        let newText='';\r\n        setText(newText);\r\n        props.showAlert(\"All Text Has Been Remove\",\"success\");\r\n\r\n    }\r\n    const handleExtraSpace=()=>{\r\n        let newText=text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"All Extra Spaces Has Been Removed\",\"success\");\r\n\r\n    }\r\n\r\n    \r\n\r\n    const handleOnChange = (event)=> {\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value);//yeh esliye lgaya so taht we can type in the box\r\n        \r\n    }\r\n\r\n    const handleCopy = () => {\r\n        // console.log(\"I am copy\");\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Text Has Been Copied\",\"success\");\r\n\r\n    }\r\n    const[text, setText]=useState('');\r\n    // text=\"new text\";  we cant update our text we have to use function to update this \r\n    // setText(\"new text\");// way to change text\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n            <h1  className='mb-4'>{props.heading}</h1>\r\n            <div className=\"mb-3\">                \r\n                <textarea\r\n                    className=\"form-control\"\r\n                    value={text}\r\n                    onChange={handleOnChange}\r\n                    // id=\"myBox\"\r\n                    // id=\"exampleFormControlTextarea1\"\r\n                    style={{color:props.mode==='dark'?'white':'#042743',backgroundColor:props.mode==='dark'?'#13466e':'white'}}\r\n                    rows=\"10\"\r\n                ></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-3 my-3\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-3 my-3\" onClick={handleDownClick}>    Convert to LowerCase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-3 my-3\" onClick={handleClearClick}>    Clear</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-3 my-3\" onClick={handleExtraSpace}> Remove Extra Spaces</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-3 my-3\" onClick={handleCopy}> Click To Copy Text</button>\r\n\r\n            \r\n            \r\n        </div>\r\n        <div className=\"container my-5\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n            <h1>Your text summary</h1>\r\n            <p><b>{text.split(\"/\\s+/\").filter((element)=>{return element.length!==0}).length} </b>  No of words in your text</p>\r\n            <p><b>{text.length}</b>  No of character in your text  </p>\r\n            <p><b>{0.008 *text.split(\" \").filter((element)=>{return element.length!==0}).length}</b>  minutes time to read this   </p>\r\n            <h2>Preview of this text</h2>\r\n            <p>{text.length>0?text:\"Nothing To Preview!!\"}</p>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\n function Alert(props) {\r\n     const capitalize=(word)=>{\r\n         const lower = word.toLowerCase();\r\n         return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n     }\r\n    return (\r\n        <div style={{height:'30px'}}>\r\n        {/* props.alert && esliye likh bcz error aari thi cant read prop tpe of null */}\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n            {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","// import logo from './logo.svg';\nimport \"./App.css\";\n// import About from \"./components/About\";\nimport React, { useState } from \"react\";\n\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\n\n//to import react-route\n// import { BrowserRouter as Router, Switch, Route,  } from \"react-router-dom\";\n\n// let name=\"ankur\";\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); //state variable that to check whether dark mode enabled or not\n  const [alert, setAlert] = useState(null); //here alert is a object\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1300);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark Mode Has Been Enabled\", \"success\");\n      // document.title = \"TextUtils - Dark Mode\";\n      // to change the title in a specific interval of time\n      // setInterval(() => {\n      //   document.title='TextUtils is amazing';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title='Download TextUtils Now' ;\n      // }, 1500);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Has Been Enabled\", \"success\");\n      // document.title = \"TextUtils - Light Mode\"; to change title name when we turnon dark mode\n    }\n  };\n  return (\n    <>\n    {/* <Navbar/> */}\n      {/* <Router> */}\n        <Navbar title=\"TestUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch> */}\n            {/* use exact word so that if there is any nesting in any component then we go to exact location in */}\n            {/* <Route exact path=\"/about\">   */}\n              {/* <About mode={mode}/> */}\n            {/* </Route> */}\n            {/* <Route exact path=\"/\"> */}\n              <TextForm\n                showAlert={showAlert}\n                heading=\"Try TextUtils - Word Counter , Character Counter , Remove Extra Spaces\"\n                mode={mode}\n              />\n            {/* </Route> */}\n          {/* </Switch> */}\n          {/* <About/> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}